import json

{{{user_code}}}

# Public test cases JSON string
public_test_cases_json = """{{{json public_test_cases}}}"""

def execute_tests():
    try:
        test_cases = json.loads(public_test_cases_json)
        
        total = len(test_cases)
        passed = 0
        failed = 0
        errors = 0
        details = []
        
        # Assuming the solution class is named 'Solution'
        solution = Solution()
        
        for i, test_case in enumerate(test_cases, 1):
            detail = {
                "index": i,
                "input": test_case["input"],
                "expected": test_case["output"]
            }
            
            try:
                # Extract inputs in parameter order
                {{#each parameters}}
                {{name}} = test_case["input"]["{{name}}"]
                {{/each}}
                # Call function
                result = solution.{{function_name}}({{#each parameters}}{{name}}{{#unless @last}}, {{/unless}}{{/each}})
                detail["actual"] = result
                
                # Compare result with expected
                passed_test = result == detail["expected"]
                
                if passed_test:
                    detail["status"] = "passed"
                    passed += 1
                else:
                    detail["status"] = "failed"
                    failed += 1
                    
                details.append(detail)
            except Exception as e:
                detail["status"] = "error"
                detail["error"] = str(e)
                errors += 1
                details.append(detail)
        
        results = {
            "total": total,
            "passed": passed,
            "failed": failed,
            "errors": errors,
            "details": details
        }
        
        print(json.dumps(results, indent=2))
    except Exception as e:
        print(json.dumps({"error": str(e)}))

if __name__ == "__main__":
    execute_tests()