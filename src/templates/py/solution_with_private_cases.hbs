import json

{{{user_code}}}

# Public test cases
public_test_cases = {{{json public_test_cases}}}

# Private test cases  
private_test_cases = {{{json private_test_cases}}}

# Combine all test cases
all_test_cases = public_test_cases + private_test_cases

def execute_tests():
    # Assuming the solution class is named 'Solution'
    solution = Solution()
    
    results = {
        "total": len(all_test_cases),
        "passed": 0,
        "failed": 0,
        "errors": 0
    }
    
    for test_case in all_test_cases:
        try:
            # Extract input values in order
            input_values = list(test_case["input"].values())
            expected = test_case["output"]
            
            # Call user's function
            result = solution.{{function_name}}(*input_values)
            
            # Use Python's built-in assertion
            assert result == expected, f"Expected {expected}, got {result}"
            results["passed"] += 1
            
        except AssertionError:
            results["failed"] += 1
        except Exception:
            results["errors"] += 1
    
    return results

if __name__ == "__main__":
    test_results = execute_tests()
    print(json.dumps(test_results))